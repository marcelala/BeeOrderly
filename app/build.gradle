/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'idea'
}



/*
        This shows from where the dependencies are going to be pulled from
*/
repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
    //mavenCentral() used on old project

}


/*
    Dependencies are requirements for building your application/library itself
    Here the dependency is JUnit
 */
dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
}


/*
    This specifies a mandatory configuration for the plugin application.
    The configuration shows the entry point of the application/project.
 */
application {
    // Define the main class for the application.
    mainClass = 'java.to.do.list.Main'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'SKIPPED', 'FAILED'
    }
}
